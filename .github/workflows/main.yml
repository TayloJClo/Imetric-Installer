name: Build & Auto Release ICam4D

on:
  push:
    branches:
      - master   # Runs only when you push to main

jobs:
  build-release:
    runs-on: windows-latest   # Since youâ€™re building a Windows .NET app

    steps:
      # 1. Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x   # Change to your version if needed

      # 3. Restore NuGet dependencies
      - name: Restore dependencies
        run: dotnet restore

      # 4. Build the project in Release mode
      - name: Build project
        run: dotnet publish Imetric_Installer.sln -c Release -o build_output
        
      # 5. Auto bump version (1.0.<GitHub Run #>)
      - name: Set version variable
        id: version
        run: echo "VERSION=1.0.${{ github.run_number }}" >> $env:GITHUB_ENV

      # 6. Update Version.xml
      - name: Update Version.xml
        run: |
          (Get-Content Version.xml) -replace '<version>.*</version>', "<version>${{ env.VERSION }}</version>" | Set-Content Version.xml
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add Version.xml
          git commit -m "Auto-update Version.xml to ${{ env.VERSION }}"
          git push

      # 7. Zip the installer files
      - name: Zip build files
        run: Compress-Archive -Path build_output\* -DestinationPath ICam4DSetup_${{ env.VERSION }}.zip

      # 8. Create a GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: ICam4D Release v${{ env.VERSION }}
          files: ICam4DSetup_${{ env.VERSION }}.zip

